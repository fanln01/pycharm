import networkx as nx
import matplotlib.pyplot as plt

# 节点数据
nodes = {i: (i,) for i in range(1, 37)}  # 1-36号节点
nodes[32] = (32, 33)  # 机器人A和B的驻地
nodes[33] = (34,)  # 图书馆

# 边数据
edges = [
    (33, 1, 0.6), (1, 2, 0.3), (2, 3, 1.1), (3, 4, 0.5), (4, 5, 0.8), (33, 6, 0.7), (1, 7, 0.6), (2, 8, 1.5),
    (3, 9, 1.7), (4, 10, 2), (5, 11, 0.7), (6, 7, 0.5), (7, 8, 1.2), (8, 9, 1.8), (9, 10, 0.8), (10, 11, 1),
    (6, 12, 0.7), (7, 13, 1.1), (8, 35, 1.3), (9, 34, 0.7), (10, 14, 1), (11, 15, 0.6), (12, 13, 0.4), (13, 35, 1.1),
    (35, 34, 2.2), (34, 14, 0.7), (14, 15, 1), (12, 16, 0.5), (13, 17, 0.7), (35, 18, 1), (34, 36, 0.4), (14, 19, 0.5),
    (15, 20, 0.6), (16, 17, 0.9), (17, 18, 0.4), (36, 19, 0.5), (19, 20, 0.6), (16, 21, 1.1), (17, 22, 0.6), (18, 23, 0.3),
    (36, 24, 0.8), (19, 25, 0.6), (20, 26, 0.4), (21, 22, 0.3), (22, 23, 1.1), (23, 24, 2.1), (24, 25, 0.8), (25, 26, 1.1),
    (21, 27, 0.5), (22, 28, 0.9), (23, 29, 0.8), (24, 30, 0.7), (25, 31, 0.5), (26, 32, 0.3), (27, 28, 0.4), (28, 29, 0.9),
    (29, 30, 1.4), (30, 31, 0.6), (31, 32, 0.5)
]

# 创建图
G = nx.Graph()

# 添加节点和边
G.add_nodes_from(nodes.keys())
G.add_weighted_edges_from(edges)

# 使用力导向布局算法进行布局
pos = nx.spring_layout(G)

# 绘制图
nx.draw(G, pos, with_labels=True, node_color='lightblue', node_size=500)

# 输出节点的坐标信息并在坐标图上显示
for node, position in pos.items():
    print("Node:", node, "Position:", position)
    plt.text(position[0], position[1], str(node), fontsize=12, ha='center', va='center')

plt.show()
