def scale_matrix(matrix, scale_factor):
    scaled_matrix = []
    for row in matrix:
        scaled_row = [int(element * scale_factor) for element in row]
        scaled_matrix.append(scaled_row)
    return scaled_matrix

# 使用示例
A=[                       #7
    [0,0.3,  0,0,0,0,  0.6,  0,0,0,  0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0,0,0  ,0,0,0.6, 0,0,0],
    [0.3,0,1.1,0,0,0,0,  1.5,0,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0  ],
    [0,1.1,0,0.5,0,0,0,1.7,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0   ],
    [0,0,0.5,0,0.8,0,0,0,0,2,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0 ],
    [0,0,0,0.8,0,0,0,0,0,0, 0.7,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0],

    [0,0,0,0,0, 0,0.5,0,0,0,  0,0.7,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0  ,0,0,0.7, 0,0,0 ],
    [0.6,0,0,0,0,0.5,0,1.2,0,0,  0,0,1.1,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0 ],
    [0,1.5,0,0,0, 0,1.2,0,1.8,0, 0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, 0,0,0,0,1.3,0],
    [0,0,1.7,0,0,0,0,1.8,0,0.8,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, 0,0,0,0.7,0,0],
    [0,0,0,2.0,0,0,0,0,0.8,0,   1.0,0,0,1.0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0 ],

    [0,0,0,0,0.7,0,0,0,0,1.0, 0,0,0,0,0.6,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0 ],
    [0,0,0,0,0 ,0.7,0,0,0,0, 0,0,0.4,0,0,0.5,0,0,0,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0 ],
    [0,0,0,0,0,0,1.1,0,0,0, 0,0.4,0,0,0,0,0.7,0,0,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,1.1,0],
    [0,0,0,0,0,0,0,0,0,1.0, 0,0,0,0,1.0,0,0,0,0.5,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0.7,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0.6,0,0,1.0,0,0,0,0,0,0.6, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0],

    [0,0,0,0,0,0,0,0,0,0, 0,0.5,0,0,0,0,0.9,0,0,0, 1.1,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0.7,0,0,0.9,0,0.4,0,0, 0,0,0.6,0,0,0,0,0,0,0  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0.4,0,0,0, 0,0,0.3,0,0,0,0,0,0,0  ,0,0,0, 0,1.0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0.5,0,0,0,0,0,0.6, 0,0,0,0,0.6,0,0,0,0,0  ,0,0,0, 0,0,0.5],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0.6,0,0,0,0.6,0, 0,0,0,0,0,0.4,0,0,0,0  ,0,0,0, 0,0,0],

    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,1.1,0,0,0,0, 0,0.3,0,0,0,0,0.5,0,0,0  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0.6,0,0,0, 0.3,0,1.1,0,0,0,0,0.9,0,0  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0.3,0,0, 0,1.1,0,2.1,0,0,0,0,0.8,0  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,2.1,0,0.8,0,0,0,0,0.7  ,0,0,0, 0,0,0.8],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0.6,0, 0,0,0,0.8,0,1.1,0,0,0,0  ,0.5,0,0, 0,0,0],

    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0.4, 0,0,0,0,1.1,0,0,0,0,0  ,0,0.3,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0.5,0,0,0,0,0,0,0.4,0,0  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0.9,0,0,0,0,0.4,0,0.9,0  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0.8,0,0,0,0,0.9,0,1.4  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0.7,0,0,0,0,1.4,0  ,0.6,0,0, 0,0,0],

    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0.5,0,0,0,0,0.6, 0,0.5,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0.3,0,0,0,0  ,0.5,0,0, 0,0,0],
    [0.6,0,0,0,0,0.7,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,0,0],
    [0,0,0,0,0,0,0,0,0.7,0, 0,0,0,0.7,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 0,2.2,0.4],
    [0,0,0,0,0,0,0,1.3,0,0, 0,0,1.1,0,0,0,0,1.0,0,0, 0,0,0,0,0,0,0,0,0,0  ,0,0,0, 2.2,0,0],
    [0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0.5,0, 0,0,0,0.8,0,0,0,0,0,0  ,0,0,0, 0.4,0,0],

]
scaled_A = scale_matrix(A, 1000)

print("原始矩阵:")
for row in A:
    print(row)

print("乘以1000后的矩阵:")
for row in scaled_A:
    print(row)